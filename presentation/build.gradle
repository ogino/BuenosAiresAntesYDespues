apply plugin: 'com.android.application'
apply plugin: 'com.github.triplet.play'
apply from: '../buildsystem/extension.gradle'

android {

    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
        archivesBaseName = "BAAD-$versionName"
        signingConfig signingConfigs.debug

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'            //Some libraries have issues with this.
        disable 'OldTargetApi'
        //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities'             //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
    }

    signingConfigs {
        debug {
            storeFile file('../buildsystem/debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix ".dev"
        }
        release {
            debuggable false
        }
    }
}

dependencies {
    def firebaseVersion = "17.2.1"
    def playServicesVersion = "17.0.0"
    def androidSupportVersion = "29.0.0"
    def leakCanaryVersion = '1.6.3'

    implementation project(':domain')
    implementation project(':data')

    def dagger_version = "2.25.2"

    implementation 'com.jakewharton:butterknife:10.2.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation "com.facebook.stetho:stetho:1.5.1"

    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"

    implementation "com.android.support:appcompat-v7:${androidSupportVersion}"
    implementation "com.android.support:recyclerview-v7:${androidSupportVersion}"
    implementation "com.android.support:design:${androidSupportVersion}"
    implementation "com.google.android.gms:play-services-analytics:${playServicesVersion}"
    implementation "com.google.android.gms:play-services-maps:${playServicesVersion}"
    implementation "com.google.firebase:firebase-messaging:20.1.0"
    implementation "com.google.firebase:firebase-core:${firebaseVersion}"
    implementation 'com.github.daniel-stoneuk:material-about-library:2.2.3-support26.1.0'
    implementation 'com.mikepenz:iconics-core:4.0.2@aar'
    implementation 'com.mikepenz:community-material-typeface:2.0.46.1@aar'

    debugImplementation "com.squareup.leakcanary:leakcanary-android:2.0"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"

    compileOnly "org.glassfish:javax.annotation:${rootProject.ext.javaxAnnotationVersion}"

    androidTestImplementation('androidx.test.espresso:espresso-core:3.2.0', {
        exclude group: 'androidx.annotation', module: 'support-annotations'
        exclude group: 'androidx.appcompat', module: 'appcompat'
        exclude module: 'recyclerview'
    })
}

apply plugin: 'com.google.gms.google-services'